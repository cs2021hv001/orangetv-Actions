name: Deploy to Fly.io

# 手动触发
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 拉取仓库代码
      - uses: actions/checkout@v3

      # 2️⃣ 安装 Fly CLI
      - name: Install Fly CLI
        run: |
          curl -L https://fly.io/install.sh | sh
          export FLYCTL_INSTALL="$HOME/.fly/bin"
          export PATH="$FLYCTL_INSTALL:$PATH"

      # 3️⃣ 部署到 Fly
      - name: Deploy to Fly
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          ~/.fly/bin/flyctl auth token $FLY_API_TOKEN
          ~/.fly/bin/flyctl deploy --config fly.toml --verbose

      # 4️⃣ 自动删除最早的机器（仅当机器数量 > 1）
      - name: Remove oldest machine if more than one exists
        if: success()  # 只有部署成功才执行
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          # 自动读取 fly.toml 中的 app 名称
          APP_NAME=$(grep '^app' fly.toml | awk -F '"' '{print $2}')
          echo "App name: $APP_NAME"

          # 获取机器数量
          COUNT=$(~/.fly/bin/flyctl machines list -a $APP_NAME --json | jq 'length')
          echo "Machine count: $COUNT"

          # 仅当机器 >1 时删除最早的一台
          if [ "$COUNT" -gt 1 ]; then
            OLDEST=$(~/.fly/bin/flyctl machines list -a $APP_NAME --json | jq -r 'sort_by(.created_at) | .[0].id')
            echo "Deleting oldest machine: $OLDEST"
            ~/.fly/bin/flyctl machines remove -a $APP_NAME $OLDEST --force
          else
            echo "Only one machine exists, skipping deletion."
          fi
